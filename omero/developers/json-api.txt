JSON API
========

Overview
--------

The OMERO json API described here provides create, read, update and delete
access to an underlying OMERO server.


Omero-marshal and Projection-based APIs
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
The majority of the API urls use `omero-marshal <https://github.com/openmicroscopy/omero-marshal>`_
to generate json dictionaries from OMERO **model** objects. The json dictionaries will be populated
with all fields of the OMERO model object, such that changing a single field and saving this
back to OMERO will update the object accordingly.
All these urls are under the ``m`` prefix:

::

    <server>/api/v0/m/


The webclient currently uses a small number of urls to perform customised
queries for browsing Project, Dataset & Image hierarchies.
These queries use **projections** and typically load a subset of fields for
OMERO objects in order to improve performance for large data counts.
These will be made available under the ``p`` prefix in future releases
but are not yet supported in OMERO 5.3.0.

::

    <server>/api/v0/p/


Versioning
^^^^^^^^^^
The JSON API uses major and minor version numbers to reflect breaking
and non-breaking changes respectively. Non-breaking changes include simple
addition of attributes to JSON data or addition of new urls.
The API version is not tied to the version of OMERO.server.

The major version is included in the url ``v0`` whereas the full
version number can be found in the header:

::

    X-OMERO-ApiVersion: 0.0


Pagination
^^^^^^^^^^
Requests that return a list of items will be paginated, showing
a ``limit`` of the first 200 objects by default.
Pagination can be specified using the ``limit`` and ``offset`` query
parameters:

::

    # List the first 100 objects (offset=0 by default)
    <server>/api/v0/m/projects/?limit=100

    # List the next 100 objects
    <server>/api/v0/m/projects/?limit=100&offset=100


Pagination details will be returned in a ``meta`` json object, including
the ``totalCount`` of objects for that query, the current ``offset`` and
``limit`` as well as the ``maxLimit`` that you can use.

::

    "meta": {
        "totalCount": 13240,
        "maxLimit": 500,
        "limit": 200,
        "offset": 0
    },

Sysadmins can configure the default ```limit``` and ```maxLimit``` settings
for their server, for example:

::

    $ bin/omero config set omero.web.api.limit 100
    $ bin/omero config set omero.web.api.max_limit 300


Normalizing Experimenters and Groups
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
When returning a list of JSON objects that each contain ```omero:details``` with
```owner``` and ```group``` data, these will typically be nested many times
within the list. In order to avoid this duplication, we can remove objects from
within each ```omero:details``` and place them under top-level ```experimenters```
and ```experimenterGroups``` lists.
You can specify this with the ```?normalize=true``` query parameter.


Child Counts
^^^^^^^^^^^^
For container objects such as Projects, Datasets and Screens it is
often useful to know the number of children within them. This can be
specified with ``?childCount=true`` parameter.
This will add an ``omero:childCount`` value to the json data.


Filtering by Owner and Group
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Most data in OMERO has an ``Owner`` and is assigned to a permissions
``Group``. By default, queries will return data from all owners
accross all groups that are accessible to the current user.
Use the query strings to filter by owner and/or group:

::

    /api/v0/m/projects/?owner=3&group=5


**Parameters**

::

    Name        Type        Description
    ------------------------------------------------------------------
    offset      Number      Pagination offset. The default is 0.

    limit       Number      The size of each page. The default is 200.
                            
    normalize   Boolean     Place Experimenters and Groups into top-level lists instead
                            of nesting within objects
    childCount  Boolean     Use ?childCount=true to include an omero:childCount attribute
                            for container objects
    owner       Number      Filter by Experimenter ID

    group       Number      Filter by Group ID


Error handling
^^^^^^^^^^^^^^

Invalid parameters or invalid JSON will result in a ```400 Bad Request```.
For example, ```?limit=foo``` will give a response of:

::

    {"message": "invalid literal for int() with base 10: 'foo'"}


Unhandled exceptions are handled with a ```500``` error response with an
error "message" and may also include a "stactrace".


Getting Started
---------------


List supported versions
^^^^^^^^^^^^^^^^^^^^^^^

You need to find which versions of the API are supported by your server,
as described above. These are provided by the base url:

::

    GET     /api/


**Response**

::

    {
      "data": [
        {
          "version": "0",
          "url:base": "http://<server>/api/v0/"
        }
      ]
    }


List starting urls
^^^^^^^^^^^^^^^^^^

The base url for the chosen version will list a number of urls for
logging on and getting started.

::

    GET     /api/v0/


**Response**

::

    {
      "url:login": "http://<server>/api/v0/login/",
      "url:save": "http://<server>/api/v0/m/save/",
      "url:projects": "http://<server>/api/v0/m/projects/",
      "url:plates": "http://<server>/api/v0/m/plates/",
      "url:datasets": "http://<server>/api/v0/m/datasets/",
      "url:token": "http://<server>/api/v0/token/",
      "url:schema": "http://www.openmicroscopy.org/Schemas/OME/2016-06",
      "url:screens": "http://<server>/api/v0/m/screens/",
      "url:servers": "http://<server>/api/v0/servers/",
      "url:images": "http://<server>/api/v0/m/images/"
    }


List available OMERO servers
----------------------------

Your API may allow you to connect to several different OMERO servers.

::

    GET     /api/v0/servers/


**Response**

::



    {
      "data": [
        {
          "host": "<server>",
          "server": "omero",
          "id": 1,
          "port": 4064
        }
      ]
    }


Get CSRF token
--------------

In order to prevent CSRF attacks, will need to obtain a CSRF token
for your session and use it for all subsequent POST, PUT and DELETE
requests in that session. You can obtain this from the ```csrftoken```
cookie of any request or from the following request:

::

    GET     /api/v0/token/


**Response**

::

    {
      "data": "eNoVq528bOqlhQqbCzKuviODTRX3PUO2"
    }


Login
-----

You can login to create an OMERO session. You must also include the CSRF token.
The EventContext for this session will be returned to you.

    POST    /api/v0/login/


**Parameters**

::

    Name        Type        Description
    ------------------------------------------------------------------
    server      Number      ID of the server
    username    String      User's username
    password    String      User's password


**Response**

::

    {
      "eventContext": {
        "userName": "ben",
        "eventId": -1,
        "sessionUuid": "0b30ee4a-c0b2-4b0f-9c61-f48b31bcad8c",
        "eventType": "User",
        "userId": 3,
        "sessionId": 171319,
        "groupName": "Nevis Lab",
        "isAdmin": False,
        "memberOfGroups": [5, 1, 4],
        "leaderOfGroups": [],
        "groupId": 5
      },
      "success": true
    }


Image containers
----------------

OMERO organises images in 2 types of many-to-many hierarcies:
``screen/plate/[Run]/Well/image`` for HCS data and ``projects/datasets/images``
for other data. Plates, Datasets, Images can also be ``Orphaned`` if not contained
within any parent container.


List projects
-------------

::

    GET     /api/v0/m/projects/


**Response**

::

    {
      "data": [
        {
          "Name": "New data",
          "Description": "Example project",
          "url:project": "http://localhost:4080/api/v0/m/projects/11601/",
          "url:datasets": "http://localhost:4080/api/v0/m/projects/11601/datasets/",
          "@id": 11601,
          "@type": "http://www.openmicroscopy.org/Schemas/OME/2016-06#Project",
          "omero:details": {
            "owner": {
              "UserName": "ben",
              "FirstName": "Ben",
              "MiddleName": "",
              "omero:details": {
                "@type": "TBD#Details",
                "permissions": {
                  "isUserWrite": false,
                  "isWorldWrite": false,
                  "canDelete": false,
                  "isWorldRead": false,
                  "perm": "------",
                  "canEdit": false,
                  "canAnnotate": false,
                  "isGroupAnnotate": false,
                  "isGroupWrite": false,
                  "canLink": false,
                  "isUserRead": false,
                  "@type": "TBD#Permissions",
                  "isGroupRead": false
                }
              },
              "Email": "",
              "LastName": "Nevis",
              "@id": 0,
              "@type": "http://www.openmicroscopy.org/Schemas/OME/2016-06#Experimenter"
            },
            "group": {
              "omero:details": {
                "@type": "TBD#Details",
                "permissions": {
                  "isUserWrite": true,
                  "isWorldWrite": false,
                  "canDelete": false,
                  "isWorldRead": false,
                  "perm": "rwra--",
                  "canEdit": false,
                  "canAnnotate": false,
                  "isGroupAnnotate": true,
                  "isGroupWrite": false,
                  "canLink": false,
                  "isUserRead": true,
                  "@type": "TBD#Permissions",
                  "isGroupRead": true
                }
              },
              "@id": 5,
              "@type": "http://www.openmicroscopy.org/Schemas/OME/2016-06#ExperimenterGroup",
              "Name": "read-ann"
            },
            "@type": "TBD#Details",
            "permissions": {
              "isUserWrite": true,
              "isWorldWrite": false,
              "canDelete": false,
              "isWorldRead": false,
              "perm": "rwra--",
              "canEdit": false,
              "canAnnotate": true,
              "isGroupAnnotate": true,
              "isGroupWrite": false,
              "canLink": false,
              "isUserRead": true,
              "@type": "TBD#Permissions",
              "isGroupRead": true
            }
          }
        }
      ]
    }


Get a single project
--------------------

::

    GET   /api/v0/m/projects/:projectId


List datasets
-------------

::

    GET     /api/v0/m/datasets/


**Parameters**

::

    Name        Type        Description
    ------------------------------------------------------------------
    group       Number      Only return datasets from this group
    owner       Number      Only return datasets owned by this user


**Response**

::

    {
      "data": [
        {
          "Name": "Test data",
          "Description": "",
          "url:dataset": "http://localhost:4080/api/v0/m/dataset/112/",
          "url:images": "http://localhost:4080/api/v0/m/datasets/112/images/",
          "url:projects": "http://localhost:4080/api/v0/m/datasets/112/projects/",
          "@id": 112,
          "@type": "http://www.openmicroscopy.org/Schemas/OME/2016-06#Project",
          "omero:details": {
            // omitted for brevity
          }
        }
      ]
    }


Get a single dataset
--------------------

::

    GET   /api/v0/m/datasets/:datasetId

