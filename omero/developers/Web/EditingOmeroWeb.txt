Editing OMERO.web
=================

If you need to make changes to OMERO.web itself, then you
will want to check out the OMERO source code. You can directly
edit and run the OMERO.web code.
This means that you benefit from the convenience of editing,
saving and refreshing your browser without any build step.

However, you will still need to build OMERO (or download the release build)
and setup your PYTHONPATH as described in the install documentation
in order that you have the various dependencies such as Django.

You will then have 2 copies of the OMERO.web code -
source code under components/tools/OmeroWeb/omeroweb and the server
build under dist/lib/python/omeroweb.

To setup and run OMERO.web from the source code, you need to 
follow a few steps (commands are shown below):

-  Set $OMERO_HOME, so that OMERO.web knows where to find config, write logs etc.

   .. note:: You should not set $OMERO_HOME on production servers

-  Make sure that the Django libraries that are under the build:
   dist/lib/python/django are on your PYTHONPATH.
-  Remove the built omeroweb folder, otherwise this will get used
   instead of the source omeroweb 

   .. note:: You have to do this again if you build the server

-  From the source omeroweb/ folder, manually run the Django development
   server

   ::

       # Example path to build target or downloaded directory
       $ export OMERO_HOME = ~/Desktop/OMERO/dist

       # Make sure the Django code etc can be imported
       $ export PYTHONPATH=$OMERO_HOME/lib/python/:$PYTHONPATH
       $ cd $OMERO_HOME
       # need to remove the built omeroweb code so it doesn't get imported
       $ rm -rf lib/python/omeroweb/

       $ cd ../components/tools/OmeroWeb/omeroweb
       $ python manage.py runserver
       Validating models...

       0 errors found
       Django version 1.3.1, using settings 'omeroweb.settings'
       Development server is running at http://127.0.0.1:8000/
       Quit the server with CONTROL-C.

   .. note:: Default port number is 8000. To specify port, use 
       E.g: $ python manage.py runserver 0.0.0.0:4080

