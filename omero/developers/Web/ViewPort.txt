Embedding OMERO.web viewport to your website
============================================

Insert the following: **WARNING**: Please note that you are giving plain
password and everyone can read from your HTML source code!

::

        <div id="omeroviewport"><iframe width="850" height="600" src="http://localhost:8000/webclient/login/?username=TEST_USER&password=SECRET&server=1&url=http://localhost:8000/webclient/img_detail/IMAGE_ID/" id="omeroviewport" name="omeroviewport"></iframe></div>

Launching OMERO.web viewer
--------------------------

Use the following code to reference the scripts.

::

    <script type="text/javascript">

        function openPopup(url) {
            owindow = window.open(url, 'anew', config='height=600,width=850,left=50,top=50,toolbar=no,menubar=no,scrollbars=yes,resizable=yes,location=no,directories=no,status=no');
            if(!owindow.closed) owindow.focus();
            return false;
        }

    </script>

Then in **<BODY>** insert the following:

::

        <a href="#" onclick="return openPopup('http://localhost:8000/webclient/img_detail/IMAGE_ID/')">Open viewer</a>

Embedding OMERO.web viewport to the custom HTML content
-------------------------------------------------------

This website will show you how to easily embed OMERO.web image viewer to
custom HTML page using OMERO.web resources straight from your OMERO site.

.. note:: This example should be used with publicly available images.
    Simply enable the image viewer, making sure all data stays secure you
    would use:

    ::

        $ bin/omero config set omero.web.public.url_filter '/webgateway'

    Then you can access public images via the following link
    `\http://your_host/webgateway/img_detail/IMAGE_ID/`. Please remember that
    public images must be in a public group where public user can access them.

    If you need more examples of how to configure public url filters, see the
    :doc:`/developers/Web/PublicData` page.

Use the following code to load stylesheets and scripts.

::

    <link rel="stylesheet" type="text/css" href="http://your_host/static/omeroweb.viewer.min.css">
    <script type="text/javascript" src="http://your_host/static/omeroweb.viewer.min.js"></script>

Then create the small JavaScript with associated stylesheet which allows you
to view particular image defined by **IMAGE\_ID**.

::

    <style type="text/css">
        <!--
        .viewport {
            height: 500px;
            width: 800px;
            padding: 10px;
        }
        -->
    </style>

    <script type="text/javascript">
        $(document).ready(function () {

            /* Prepare the viewport */
            viewport = $.WeblitzViewport($("#viewport"), "http://your_host/webgateway/", {
                'mediaroot': "http://your_host/static/"
            });

            /* Load the selected image into the viewport */
            viewport.load(IMAGE_ID);

        });
    </script>

Then in **<BODY>** insert the following:

::

    <div id="viewport" class="viewport"></div>


To make your page more interactive for example you can load metadata, ROIs
and add zoom or channel buttons. All interaction has to be handled in
asynchronius call that require loading.

Add Channel buttons
^^^^^^^^^^^^^^^^^^^

::

    <label for="viewport-channels-box">Channels</label>
    <span id="viewport-channels-box"></span>

    <div id="viewport" class="viewport"></div>


Then add JavaScript


::

    <script type="text/javascript">

        var _imageLoad = function (ev, viewport) {

            /**
             * This function is called when an image is initially loaded.
             * This is the place to sync everything; rendering model, quality, channel buttons, etc.
             */

            /**
             * Load channels and create buttons
             */
            var channels = viewport.getChannels();
            for (i in channels) {
                $('#viewport-channels-box').append('<button id="viewer-ch-' + i + '"\
                    class="squared' + (channels[i].active ? ' pressed' : '') + '"\
                    style="background-color: #' + channels[i].color + '"\
                    title="' + channels[i].label + '">' + channels[i].label + '</button>');
            }

            /**
             * Attach functions to the click event on specific buttons
             */

            $('#viewport-channels-box button.squared').click(function (e) {
                viewport.toggleChannel(e.target.id.split("-")[2]);
                $(e.target.id).not(this).removeClass("pressed");
                $(this).toggleClass("pressed");
            });

        }

        $(document).ready(function () {

            /* Prepare the viewport */
            viewport = $.WeblitzViewport($("#viewport"), "http://localhost/webgateway/", {
                'mediaroot': "http://localhost/static/"
            });

            /* Async call needs loading */
            viewport.bind('imageLoad', _imageLoad);
            
            /* Load the selected image into the viewport */
            viewport.load(IMAGE_ID);

        });
    </script>

Add Zoom buttons
^^^^^^^^^^^^^^^^

::

    <div class="spin-button">

        <label for="viewport-zoom">Zoom (%)</label>
        <input type="text" class="spin-button" id="viewport-zoom" value="100" size="5" />
        <button id="viewport-full-size" title="Actual size">1:1</button>
        <button id="viewport-full-screen" title="Zoom image to fit">Fit</button>

    </div>

    <div id="viewport" class="viewport"></div>

Then add Javascript

::

    <script type="text/javascript">

        var _imageLoad = function (ev, viewport) {

            /**
             * This function is called when an image is initially loaded.
             * This is the place to sync everything; rendering model, quality, channel buttons, etc.
             */

            /**
             * Attach functions to the click event on specific buttons
             */

            $("#viewport-full-size").click(function () {
                viewport.setZoom(100);
            });

            $("#viewport-full-screen").click(function () {
                viewport.setZoomToFit();
            });

            $("#viewport-zoom").change(function (e) {
                var percent = parseFloat($(this).attr('value').replace(/%/, ''));
                if (isNaN(percent)) {
                    percent = 100;
                }
                viewport.setZoom(percent);
            });

        }

        $(document).ready(function () {

            /* Prepare the viewport */
            viewport = $.WeblitzViewport($("#viewport"), "http://localhost/webgateway/", {
                'mediaroot': "http://localhost/static/"
            });

            /* Async call needs loading */
            viewport.bind('imageLoad', _imageLoad);

            /* Prepare the Zoom spin button */
            $("INPUT.spin-button").SpinButton({
                min: 0
            });

            /* Load the selected image into the viewport */
            viewport.load(IMAGE_ID);

            /* Bind zoomimg action to the zoom button */
            viewport.bind('zoom', function (e, percent) {
                $("#viewport-zoom").attr('value', '' + percent /*+'%'*/ );
            });

        });
    </script>

Turn on and off ROIs
^^^^^^^^^^^^^^^^^^^^

::

    <button id="viewport-show-rois" title="Show ROIs">Show ROIs</button>
    <button id="viewport-hide-rois" title="Hide ROIs">Hide ROIs</button>

    <div id="viewport" class="viewport"></div>


Then add Javascript

::

    <script type="text/javascript">

        var viewport;
        
        var show_rois = function() {
            var theT = viewport.getTPos();
            var theZ = viewport.getZPos();

            if (!viewport.viewportimg.get(0).show_rois) {
                var options = {'width':viewport.loadedImg.size.width, 
                               'height':viewport.loadedImg.size.height,
                               'json_url':'http://your_host/webgateway/get_rois_json/'+viewport.loadedImg.id+"/"};
                if (viewport.loadedImg.tiles) {
                    options['tiles'] = true;
                }

                viewport.viewportimg.roi_display(options);
                viewport.viewportimg.get(0).setRoiZoom(viewport.viewportimg.get(0).getZoom());
            }

            /* loads ROIs (if needed) and shows. */
            viewport.viewportimg.get(0).show_rois(theZ, theT);

        }
        
        var refresh_rois = function () {
            /* re-plots the ROIs (if currently shown) for new Z and T position */
            if (viewport.viewportimg.get(0).refresh_rois) {
                var theT = viewport.getTPos();
                var theZ = viewport.getZPos();
                viewport.viewportimg.get(0).refresh_rois(theZ, theT);
            }
        }

        var hide_rois = function() {
            /* hides the display of ROIs. */
            if (viewport.viewportimg.get(0).hide_rois) {
                viewport.viewportimg.get(0).hide_rois();
            }
        }

        var _imageLoad = function (ev, viewport) {

            /**
             * This function is called when an image is initially loaded.
             * This is the place to sync everything; rendering model, quality, channel buttons, etc.
             */

            /**
             * Attach functions to the click event on specific buttons
             */
            $("#viewport-show-rois").click(function () {
                show_rois();
            });
            $("#viewport-hide-rois").click(function () {
                hide_rois();
            });

        }

        var _instantZoom = function(e, percent) {
            if (viewport.viewportimg.get(0).setRoiZoom) {
                viewport.viewportimg.get(0).setRoiZoom(percent);
            }
        }

        $(document).ready(function () {

            /* Prepare the viewport */
            viewport = $.WeblitzViewport($("#viewport"), "http://your_host/webgateway/", {
                'mediaroot': "http://your_host/omero/static/"
            });

            /* Async call needs loading */
            viewport.bind('imageLoad', _imageLoad);
            /* Bind zoomimg action to the ROIs */
            viewport.bind('instant_zoom', _instantZoom);

            /* Load the selected image into the viewport */
            viewport.load(IMAGE_ID);

        });
    </script>

Turn on and off Scalebar
^^^^^^^^^^^^^^^^^^^^^^^^

::

    <label for="viewport-scalebar">Scalebar</label>
    <input id="viewport-scalebar" type="checkbox" disabled/>

    <div id="viewport" class="viewport"></div>


Then add Javascript

::

    <script type="text/javascript">

        var viewport;

        var show_scalebar = function () {
          if (!viewport.viewportimg.get(0).show_scalebar) {
          // if the Scalebar plugin has not been initialised (method not available...) init and load Scalebar...
              var options = {'pixSizeX': viewport.getPixelSizes().x,
                             'imageWidth': viewport.getSizes().width};
              if (viewport.loadedImg.tiles) {
                  options['tiles'] = true;
              }
              viewport.viewportimg.scalebar_display(options);
          }

          viewport.viewportimg.get(0).setScalebarZoom(viewport.getZoom()/100 );
          viewport.viewportimg.get(0).show_scalebar();

        }

        var hide_scalebar = function () {
            viewport.viewportimg.get(0).hide_scalebar();
        }

        var _imageLoad = function (ev, viewport) {

            /**
             * This function is called when an image is initially loaded.
             * This is the place to sync everything; rendering model, quality, channel buttons, etc.
             */

            /* enable scalebar */
            tmp = viewport.getPixelSizes();
            if (tmp.x != undefined && tmp.x > 0) {
                $("#viewport-scalebar").prop("disabled", false);
            }

            // 'Scalebar' checkbox to left of image
            $("#viewport-scalebar").change(function() {
                if(this.checked) {
                    show_scalebar();
                } else {
                    hide_scalebar();
                }
            });

        }

        var instant_zoom = function(e, percent) {
            if (viewport.viewportimg.get(0).setScalebarZoom) {
                viewport.viewportimg.get(0).setScalebarZoom(percent/100);
            }
        }

        $(document).ready(function () {

            /* Prepare the viewport */
            viewport = $.WeblitzViewport($("#viewport"), "http://your_host/webgateway/", {
                'mediaroot': "http://your_host/omero/static/"
            });

            /* Async call needs loading */
            viewport.bind('imageLoad', _imageLoad);
            /* Bind zoomimg action to the ROIs */
            viewport.bind('instant_zoom', _instantZoom);

            /* Load the selected image into the viewport */
            viewport.load(IMAGE_ID);

        });
    </script>

