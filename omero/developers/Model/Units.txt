Units
=====

A number of properties in the OME model are physical measurements
which inherently have a unit associated with them. Earlier versions
of OME defined a default unit for the measurement. Now users, clients,
and acquisition systems can specify the unit themselves rather than
converting their internal unit to the OME default.

Supported units
---------------
* Electric potential
* Frequency
* Length
* Power
* Pressure
* Temperature
* Time

Each of the supported units contain a number of values from the
International System of Units (SI) in the most common prefixes from
yotta (10^24) to yocto (10^-24). The Length unit also contains
values from the Imperial system as well as internal values which
are internal to OME: reference frame and pixel.

Unit objects
------------

Each unit quantity consists of a double scalar and an enumeration
which chooses one of the pre-defined values from the model. In
code, uppercase spellings of the numerations are used, while in
the schema, in OME-XML files, and in the database, the unicode
symbol for the unit is used.

Defining a unit
~~~~~~~~~~~~~~~

::

     Pixels p = ...; // Defined elsewhere
     Length l = new LengthI(2.1, UnitsLength.MICROM);
     p.setPhysicalSizeX(l);
     p.setPhysicalSizeY(l);
     iUpdatePrx.saveObject(p);

The above stores a pixels in the database with X and Y
physical lengths of "Âµm".

Converting a unit
~~~~~~~~~~~~~~~~~

::

     Pixels p = ...; // As saved above
     Length x = p.getPhysicalSizeX(); // 2.1 microns
     x.convert(UnitsLength.NM); // As nanometers

.. seealso::

    * http://en.wikipedia.org/wiki/Units_of_measurement
    * http://en.wikipedia.org/wiki/System_of_measurement
    * http://en.wikipedia.org/wiki/International_System_of_Units
